from _tracemalloc import stop
import re

from aiogram.bot import bot
from aiogram.types import Message, ReplyKeyboardRemove, CallbackQuery
from keyboards.default import menu
from aiogram import types
from aiogram.dispatcher.filters.builtin import CommandHelp, Text
import random
from loader import dp
from utils.misc import rate_limit
import sys

@rate_limit(5, 'help')
@dp.message_handler(CommandHelp())
async def show_menu(message: Message):
    await message.answer(text=
                         "–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:\n"
                         "üëâ –î–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å–æ —Å–ª–æ–≤–∞–º–∏, –Ω–∞–ø–∏—à–∏—Ç–µ —Å–ª–æ–≤–æ –ª–∞—Ç–∏–Ω—Å–∫–∏–º–∏ –±—É–∫–≤–∞–º–∏ –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ\n"
                         "üëâ –ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä–µ–≤–æ–¥, –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ —Ä—É—Å—Å–∫–∏–º–∏ –±—É–∫–≤–∞–º–∏ –ø–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω–æ–≥–æ\n"
                         "üëâ –î–ª—è –≤—ã–≤–æ–¥–∞ —Å–ª–æ–≤ (5 —Å–ª–æ–≤) –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ –≤—ã–±–µ—Ä–∏—Ç–µ '–ü–æ–∫–∞–∑–∞—Ç—å —Å–ª–æ–≤–∞'\n"
                         "üëâ –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤, –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ –≤—ã–±–µ—Ä–∏—Ç–µ '–ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤'",
                         reply_markup=menu
                         )

@dp.callback_query_handler(text_contains="entered")
async def enteredWord(call: CallbackQuery):
    await call.answer(cache_time=10)
    txt = call.message.text
    print(txt)
    # >>> –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–ª–æ–≤–æ

    file_words = open(f"dictionaries/{call.message.chat.id}.txt", 'a')  # –û—Ç–∫—Ä—ã–≤–∞–µ–º –¥–ª—è –∑–∞–ø–∏—Å–∏

    with open(f"dictionaries/{call.message.chat.id}.txt") as file:  # –û—Ç—Ä—ã–≤–∞–µ–º –¥–ª—è —á—Ç–µ–Ω–∏—è - with –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–∫—Ä—ã–≤–∞–µ—Ç —Ñ–∞–π–ª
        reads_words = [row.strip() for row in file]

    get_button = txt  # –í–≤–æ–¥–∏–º –∂–µ–ª–∞–µ–º–æ–µ —Å–ª–æ–≤–æ
    if get_button in reads_words:  # –ò—â–µ–º –µ—Å–ª–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        await call.message.answer(f"–¢–∞–∫–æ–µ —Å–ª–æ–≤–æ —É–∂–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ")
    else:
        file_words.write(get_button + ' - ')  # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Å–ª–æ–≤–æ, –µ—Å–ª–∏ –Ω–æ–≤–æ–µ
        await call.message.answer(f"–°–ª–æ–≤–æ - " + get_button + " —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ \n"
                                                             "–í–≤–µ–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–µ—Ä–µ–≤–æ–¥")
        print(get_button)
        file_words.close()
    await call.message.edit_reply_markup()

@dp.callback_query_handler(text_contains="deleted")
async def deletedWord(call: CallbackQuery):
    await call.answer(cache_time=10)
    txt = call.message.text
    print(txt)
    file = open(f"dictionaries/{call.message.chat.id}.txt")  # –û—Ç–∫—Ä—ã–≤–∞–µ–º –¥–ª—è —á—Ç–µ–Ω–∏—è
    lines = file.readlines()  # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –º–∞—Å—Å–∏–≤
    file.close()  # –ó–∞–∫—Ä—ã–≤–∞–µ–º
    file = open(f"dictionaries/{call.message.chat.id}.txt", "w")  # –û—Ç–∫—Ä—ã–≤–∞–µ–º –¥–ª—è –∑–∞–ø–∏—Å–∏
    deletedWord = txt
    for line in lines:
        if line != deletedWord + "\n":  # –£–¥–∞–ª—è–µ–º –µ—Å–ª–∏ –Ω–∞—à–ª–∏
            file.write(line)  # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ —Ñ–∞–π–ª, —Ç–æ —á—Ç–æ –≤—ã—à–ª–æ
    await call.message.answer(f"–°–ª–æ–≤–æ - " + deletedWord + " —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ")
    file.close()
    await call.message.edit_reply_markup()

@dp.callback_query_handler(text_contains="translate")
async def enteredWord(call: CallbackQuery):
    await call.answer(cache_time=10)
    txt = call.message.text

    with open(f"dictionaries/{call.message.chat.id}.txt") as file:  # –û—Ç—Ä—ã–≤–∞–µ–º –¥–ª—è —á—Ç–µ–Ω–∏—è - with –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–∫—Ä—ã–≤–∞–µ—Ç —Ñ–∞–π–ª
        for line in file:
            if txt in line:
                print(line)
                await call.message.answer(line)

    await call.message.edit_reply_markup()

@dp.message_handler(Text(equals=["–ü–æ–∫–∞–∑–∞—Ç—å —Å–ª–æ–≤–∞"]))
async def get_button(message: Message):
    file_words = open(f"dictionaries/{message.chat.id}.txt", 'a')
    with open(f"dictionaries/{message.chat.id}.txt") as file:  # –û—Ç–∫—Ä—ã–≤–∞–µ–º –¥–ª—è —á—Ç–µ–Ω–∏—è
        read_words = [row.strip() for row in file]  # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –º–∞—Å—Å–∏–≤
    read = []
    new_words = []
    i = 0
    while i < 10:  # –ò—â–µ–º 10 —Å–ª–æ–≤
        if read_words == []:
            await message.answer(f"–í–∞—à —Å–ª–æ–≤–∞—Ä—å –ø—É—Å—Ç–æ–π, –¥–æ–±–∞–≤—å—Ç–µ —Å–ª–æ–≤–æ")
            i = 10
        else:
            read.append(random.choice(read_words))  # –í—ã–≤–æ–¥–∏–º —Ä–∞–Ω–¥–æ–º–Ω–æ 10 —Å–ª–æ–≤
            i += 1
    [new_words.append(item) for item in read if item not in new_words]  # –§–∏–ª—å—Ç—Ä—É–µ–º, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ —Å—Ö–æ–∂–∏—Ö —Å–ª–æ–≤

    enterdWord = new_words[:5]
    # print(enterdWord)
    if len(enterdWord) < 5:
        await message.answer(f"–í –≤–∞—à–µ–º —Å–ª–æ–≤–∞—Ä–µ –º–µ–Ω—å—à–µ 5 —Å–ª–æ–≤, –¥–æ–±–∞–≤—å—Ç–µ –µ—â–µ")
    else:
        str1 = enterdWord[0]
        str2 = enterdWord[1]
        str3 = enterdWord[2]
        str4 = enterdWord[3]
        str5 = enterdWord[4]
        file_words.close()
        if read_words == []:
            print()
        else:
            await message.answer(f"–í–∞—à–∏ —Å–ª–æ–≤–∞:\n{str1.split('-')[0]}\n{str2.split('-')[0]}\n"
                                 f"{str3.split('-')[0]}\n{str4.split('-')[0]}\n{str5.split('-')[0]}")
    # print(str1.split('-')[0])
    # print(str2.split('-')[0])
    # print(str3.split('-')[0])
    # print(str4.split('-')[0])
    # print(str5.split('-')[0])

@dp.message_handler(Text(equals=["–ü–æ–∫–∞–∑–∞—Ç—å –Ω–æ–≤—ã–µ —Å–ª–æ–≤–∞"]))
async def get_button(message: Message):
    file_words = open(f"dictionaries/{message.chat.id}.txt", 'a')
    with open(f"dictionaries/{message.chat.id}.txt") as file:  # –û—Ç–∫—Ä—ã–≤–∞–µ–º –¥–ª—è —á—Ç–µ–Ω–∏—è
        read_words = [row.strip() for row in file]  # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –º–∞—Å—Å–∏–≤
    read = []
    new_words = []
    print(read_words)
    enterdWord = read_words[-5:]
    print(enterdWord)
    if len(enterdWord) < 5:
        await message.answer(f"–í –≤–∞—à–µ–º —Å–ª–æ–≤–∞—Ä–µ –º–µ–Ω—å—à–µ 5 —Å–ª–æ–≤, –¥–æ–±–∞–≤—å—Ç–µ –µ—â–µ")
    else:
        str1 = enterdWord[0]
        str2 = enterdWord[1]
        str3 = enterdWord[2]
        str4 = enterdWord[3]
        str5 = enterdWord[4]
        file_words.close()
        if read_words == []:
            print()
        else:
            await message.answer(f"–í–∞—à–∏ —Å–ª–æ–≤–∞:\n{str1.split('-')[0]}\n{str2.split('-')[0]}\n"
                                 f"{str3.split('-')[0]}\n{str4.split('-')[0]}\n{str5.split('-')[0]}")


@dp.message_handler(Text(equals=["–ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–ª–∏—á–µ—Ç–≤–æ —Å–ª–æ–≤"]))
async def get_button(message: Message):
    with open(f"dictionaries/{message.chat.id}.txt") as file:  # –û—Ç–∫—Ä—ã–≤–∞–µ–º –¥–ª—è —á—Ç–µ–Ω–∏—è
        len_words = [row.strip() for row in file]  # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –º–∞—Å—Å–∏–≤
    print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤ –≤ –≤–∞—à–µ–º —Å–ª–æ–≤–∞—Ä–µ - {len(len_words)}")  # –í—ã–≤–æ–¥–∏–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
    await message.answer(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤ –≤ –≤–∞—à–µ–º —Å–ª–æ–≤–∞—Ä–µ - {len(len_words)}")

